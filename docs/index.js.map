{"version":3,"sources":["../src/EventBus.ts","../src/hidden.ts","../src/throttle.ts","../src/IfVisible.ts","../src/index.ts"],"sourcesContent":["export type FireableEvent = 'idle' | 'statusChanged' | 'blur' | 'focus' | 'wakeup'\nexport type Status = 'active' | 'idle' | 'hidden'\nexport interface Data {\n  status: Status\n}\nexport type FireableEventCallback = (data?: Data) => void\n\nexport class EventBus {\n  private store: { [event: string]: FireableEventCallback[] }\n\n  constructor() {\n    this.store = {}\n  }\n\n  public attach(event: FireableEvent, callback: FireableEventCallback) {\n    if (!this.store[event]) {\n      this.store[event] = []\n    }\n    this.store[event].push(callback)\n  }\n\n  public fire(event: FireableEvent, data?: Data) {\n    if (this.store[event]) {\n      this.store[event].forEach((callback) => {\n        callback(data)\n      })\n    }\n  }\n\n  public remove(event: FireableEvent, callback?: FireableEventCallback) {\n    if (!callback) {\n      delete this.store[event]\n    }\n    if (this.store[event]) {\n      this.store[event] = this.store[event].filter((savedCallback) => {\n        return callback !== savedCallback\n      })\n    }\n  }\n}\n","/* eslint-disable @typescript-eslint/no-unsafe-member-access */\nexport type DocumentHidden = 'hidden' | 'mozHidden' | 'msHidden' | 'webkitHidden'\nexport type VisibilityChangeEvent =\n  | 'visibilitychange'\n  | 'mozHidden'\n  | 'mozvisibilitychange'\n  | 'msvisibilitychange'\n  | 'webkitvisibilitychange'\n\nlet documentHiddenProperty: DocumentHidden\nlet visibilityChangeEvent: VisibilityChangeEvent\n\nfunction resolveHiddenDetectionMethod(doc: Document) {\n  // lazily do this one time only\n  if (visibilityChangeEvent !== undefined) {\n    return\n  }\n\n  // Find correct browser events\n  if (doc.hidden !== undefined) {\n    documentHiddenProperty = 'hidden'\n    visibilityChangeEvent = 'visibilitychange'\n  } else if ((doc as any).mozHidden !== undefined) {\n    documentHiddenProperty = 'mozHidden'\n    visibilityChangeEvent = 'mozvisibilitychange'\n  } else if ((doc as any).msHidden !== undefined) {\n    documentHiddenProperty = 'msHidden'\n    visibilityChangeEvent = 'msvisibilitychange'\n  } else if ((doc as any).webkitHidden !== undefined) {\n    documentHiddenProperty = 'webkitHidden'\n    visibilityChangeEvent = 'webkitvisibilitychange'\n  }\n\n  if (documentHiddenProperty === undefined) {\n    throw new Error(\n      'Unable to determine browser event.  This may be an incompatible browser.  See https://github.com/rosskevin/ifvisible#browsers',\n    )\n  }\n}\n\nexport function isHidden(doc: Document) {\n  resolveHiddenDetectionMethod(doc)\n  return (doc as any)[documentHiddenProperty as DocumentHidden] as boolean\n}\n\nexport function resolveVisibilityChangeEvent(doc: Document) {\n  resolveHiddenDetectionMethod(doc)\n  return visibilityChangeEvent\n}\n","export type Throttled<T extends (...args: any) => any> = (...args: Parameters<T>) => ReturnType<T>\n\n/**\n * Creates a throttled {callback} will be called at most once per {limit} millisonds.\n *\n * @param callback - function\n * @param limit - milliseconds\n * @return - In limit mode, it will return last result of the {callback}, otherwise it will invoke the {callback}\n */\nexport function throttle<T extends (...args: any) => any>(\n  callback: T,\n  limit: number,\n): Throttled<T> {\n  let inThrottle: boolean\n  let lastResult: ReturnType<T>\n\n  return function (this: any, ...args): ReturnType<T> {\n    if (!inThrottle) {\n      inThrottle = true\n\n      setTimeout(() => (inThrottle = false), limit)\n\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n      lastResult = callback.apply(this, args)\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    return lastResult as any\n  }\n}\n","import { EventBus, FireableEvent, FireableEventCallback, Status } from './EventBus'\nimport { isHidden, resolveVisibilityChangeEvent } from './hidden'\nimport { throttle } from './throttle'\n\nexport interface IIdleInfo {\n  isIdle: boolean\n  idleFor: number\n  timeLeft: number\n  timeLeftPer: number\n}\n\ntype TimerCallback = () => void\nclass Timer {\n  private id: NodeJS.Timeout | string | number | undefined // NodeJS.Timer\n  private ifvInstance: IfVisible\n  private seconds: number\n  private callback: TimerCallback\n\n  constructor(ifvInstance: IfVisible, seconds: number, callback: TimerCallback) {\n    this.ifvInstance = ifvInstance\n    this.seconds = seconds\n    this.callback = callback\n    this.start()\n\n    this.ifvInstance.on('statusChanged', (data) => {\n      data?.status === 'active' ? this.start() : this.pause()\n    })\n  }\n\n  public stop() {\n    clearInterval(this.id)\n  }\n\n  public resume() {\n    this.start()\n  }\n\n  public pause() {\n    this.stop()\n  }\n\n  private start() {\n    if (this.id !== undefined) clearInterval(this.id)\n    this.id = setInterval(this.callback, this.seconds * 1000)\n  }\n}\n\ntype ListenerCallback = (...args: any) => void\nexport class IfVisible {\n  private status: Status = 'active'\n  private timers: NodeJS.Timeout[] = []\n  private idleTime = 30000\n  private idleStartedTime?: number\n  private win: Window\n  private doc: Document\n  private eventBus: EventBus\n  private winListeners?: { [key: string]: ListenerCallback }\n  private docListeners?: { [key: string]: ListenerCallback }\n  private focusListener?: FireableEventCallback\n  private throttleDuration = 500\n\n  constructor(win: Window, doc: Document) {\n    this.win = win\n    this.doc = doc\n    this.eventBus = new EventBus()\n\n    this.trackChange() // get initial status\n    this.reattach() // attach all listeners with the default options\n  }\n\n  public on(event: FireableEvent, callback: FireableEventCallback): IfVisible {\n    this.eventBus.attach(event, callback)\n    return this\n  }\n\n  public off(event: FireableEvent, callback?: FireableEventCallback): IfVisible {\n    this.eventBus.remove(event, callback)\n    return this\n  }\n\n  public setIdleDuration(seconds: number): IfVisible {\n    this.idleTime = seconds * 1000\n    this.reattach()\n    return this\n  }\n\n  public getIdleDuration(): number {\n    return this.idleTime\n  }\n\n  public getIdleInfo(): IIdleInfo {\n    const now = +new Date()\n    let res: IIdleInfo\n    const idleFor = this.idleStartedTime ? now - this.idleStartedTime : 0\n    if (this.status === 'idle') {\n      res = {\n        isIdle: true,\n        idleFor,\n        timeLeft: 0,\n        timeLeftPer: 100,\n      }\n    } else {\n      const timeLeft = this.idleStartedTime\n        ? this.idleStartedTime + this.idleTime - now\n        : this.idleTime\n      res = {\n        isIdle: false,\n        idleFor,\n        timeLeft,\n        timeLeftPer: parseFloat((100 - (timeLeft * 100) / this.idleTime).toFixed(2)),\n      }\n    }\n    return res\n  }\n\n  public setThrottleDuration(milliseconds: number): IfVisible {\n    this.throttleDuration = milliseconds\n    this.reattach\n    return this\n  }\n\n  public idle(callback?: FireableEventCallback): IfVisible {\n    // used like a setter\n    if (callback) {\n      this.on('idle', callback)\n    } else {\n      this.status = 'idle'\n      this.eventBus.fire('idle')\n      this.eventBus.fire('statusChanged', { status: this.status })\n    }\n    return this\n  }\n\n  public blur(callback?: FireableEventCallback): IfVisible {\n    // used like a setter\n    if (callback) {\n      this.on('blur', callback)\n    } else {\n      this.status = 'hidden'\n      this.eventBus.fire('blur')\n      this.eventBus.fire('statusChanged', { status: this.status })\n    }\n    return this\n  }\n\n  public focus(callback?: FireableEventCallback): IfVisible {\n    // used like a setter\n    if (callback) {\n      this.on('focus', callback)\n    } else if (this.status !== 'active') {\n      this.status = 'active'\n      this.eventBus.fire('focus')\n      this.eventBus.fire('wakeup')\n      this.eventBus.fire('statusChanged', { status: this.status })\n    }\n    return this\n  }\n\n  public wakeup(callback?: FireableEventCallback): IfVisible {\n    // used like a setter\n    if (callback) {\n      this.on('wakeup', callback)\n    } else if (this.status !== 'active') {\n      this.status = 'active'\n      this.eventBus.fire('wakeup')\n      this.eventBus.fire('statusChanged', { status: this.status })\n    }\n    return this\n  }\n\n  public onEvery(seconds: number, callback: TimerCallback): Timer {\n    return new Timer(this, seconds, callback)\n  }\n\n  public now(check?: Status): boolean {\n    if (check !== undefined) {\n      return this.status === check\n    }\n    return this.status === 'active'\n  }\n\n  public getStatus() {\n    return this.status\n  }\n\n  /**\n   * Removes all listeners from the DOM, but not user added listeners so it may be reattached later.\n   */\n  public detach() {\n    if (\n      this.winListeners !== undefined &&\n      this.docListeners !== undefined &&\n      this.focusListener !== undefined\n    ) {\n      // detach all previous listeners first\n      for (const name of Object.getOwnPropertyNames(this.winListeners)) {\n        this.win.removeEventListener(name, this.winListeners[name])\n      }\n      for (const name of Object.getOwnPropertyNames(this.docListeners)) {\n        this.doc.removeEventListener(name, this.docListeners[name])\n      }\n\n      this.off('focus', this.focusListener) // reverse the attach process we do below\n    }\n\n    // wipe out old listener storage\n    this.winListeners = undefined\n    this.docListeners = undefined\n    this.focusListener = undefined\n  }\n\n  /**\n   * Allows for:\n   *  - control of DOM detach/reattach\n   *  - recognition of changes to option and reattachment with those taken into account.\n   */\n  public reattach() {\n    this.detach()\n\n    // initialize storage\n    this.winListeners = {}\n    this.docListeners = {}\n    this.focusListener = undefined\n\n    //-----------------------------\n    // instantiate listeners for doc and store them\n    this.docListeners[resolveVisibilityChangeEvent(this.doc) as 'visibilitychange'] = throttle(\n      () => this.trackChange(),\n      this.throttleDuration,\n    )\n\n    for (const name of ['mousemove', 'mousedown', 'keyup', 'touchstart']) {\n      this.docListeners[name] = throttle(() => this.startIdleTimer(), this.throttleDuration)\n    }\n\n    // instantiate listeners for win and store them\n    this.winListeners['scroll'] = throttle(() => this.startIdleTimer(), this.throttleDuration)\n\n    // instantiate focus listener\n    this.focusListener = throttle(() => this.startIdleTimer(), this.throttleDuration)\n\n    //-----------------------------\n    // attach doc listeners\n    for (const name of Object.getOwnPropertyNames(this.docListeners)) {\n      this.doc.addEventListener(name, this.docListeners[name])\n    }\n\n    // attach win listeners\n    for (const name of Object.getOwnPropertyNames(this.winListeners)) {\n      this.win.addEventListener(name, this.winListeners[name])\n    }\n    // When page is focus without any event, it should not be idle.\n    this.focus(this.focusListener)\n\n    // finally kick everything off\n    this.startIdleTimer()\n  }\n\n  private trackChange() {\n    if (isHidden(this.doc)) {\n      this.blur()\n    } else {\n      this.focus()\n    }\n  }\n\n  private startIdleTimer(event?: Event) {\n    // Prevents Phantom events.\n    if (event instanceof MouseEvent && event.movementX === 0 && event.movementY === 0) {\n      return\n    }\n\n    this.timers.map(clearTimeout)\n    this.timers.length = 0 // clear the array\n\n    if (this.status === 'idle') {\n      this.wakeup()\n    }\n\n    this.idleStartedTime = +new Date()\n\n    this.timers.push(\n      setTimeout(() => {\n        if (this.status === 'active' || this.status === 'hidden') {\n          this.idle()\n        }\n      }, this.idleTime),\n    )\n  }\n}\n","/* eslint-disable @typescript-eslint/no-unsafe-member-access */\nimport { IfVisible } from './IfVisible'\n\n// set library singleton and export for direct use\nexport const ifvisible = new IfVisible(window, document)\n\n// set window singleton (e.g. window.ifvisible) to the same instance\n;(window as any).ifvisible = ifvisible\n\nexport * from './EventBus'\nexport * from './IfVisible'\n"],"mappings":"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","names":[]}